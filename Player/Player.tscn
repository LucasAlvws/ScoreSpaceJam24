[gd_scene load_steps=4 format=2]

[ext_resource path="res://Testes/PlayerBody.cs" type="Script" id=1]

[sub_resource type="Shader" id=7]
code = "shader_type canvas_item;

uniform vec4 bg_color: hint_color;

float rand(vec2 st) {
    return fract(sin(dot(st.xy, vec2(12.9898,78.233))) * 43758.5453123);
}

void fragment() {
	float size = 100.0;
	float prob = 0.9;
	vec2 pos = floor(1.0 / size * FRAGCOORD.xy);
	float color = 0.0;
	float starValue = rand(pos);

	if (starValue > prob)
	{
		vec2 center = size * pos + vec2(size, size) * 0.5;
		float t = 0.9 + 0.2 * sin(TIME * 8.0 + (starValue - prob) / (1.0 - prob) * 45.0);
		color = 1.0 - distance(FRAGCOORD.xy, center) / (0.5 * size);
		color = color * t / (abs(FRAGCOORD.y - center.y)) * t / (abs(FRAGCOORD.x - center.x));
	}
	else if (rand(SCREEN_UV.xy / 20.0) > 0.996)
	{
		float r = rand(SCREEN_UV.xy);
		color = r * (0.85 * sin(TIME * (r * 5.0) + 720.0 * r) + 0.95);
	}
	COLOR = vec4(vec3(color),1.0) + bg_color;
}"

[sub_resource type="ShaderMaterial" id=8]
shader = SubResource( 7 )
shader_param/bg_color = null

[node name="Player" type="KinematicBody2D"]
material = SubResource( 8 )
position = Vector2( 451, 399 )
scale = Vector2( 40, 40 )
script = ExtResource( 1 )
__meta__ = {
"_edit_group_": true
}

[node name="escudo" type="Node2D" parent="."]

[node name="player" type="Node2D" parent="."]

[node name="colisao_player" type="CollisionPolygon2D" parent="."]
polygon = PoolVector2Array( -1, -1, -1, 0, 0, 0, 0, -1 )

[node name="colisao_escudo" type="CollisionPolygon2D" parent="."]
polygon = PoolVector2Array( -1, -1, -1, 0, 0, 0, 0, -1 )

[node name="Camera2D" type="Camera2D" parent="."]
current = true
zoom = Vector2( 0.8, 0.8 )
smoothing_enabled = true
